generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator kysely {
  provider = "prisma-kysely"

  // Optionally provide a destination directory for the generated file
  // and a filename of your choice
  output       = "../db"
  fileName     = "types.ts"
  // Optionally generate runtime enums to a separate file
  enumFileName = "enums.ts"
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime  @default(now())
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  Following Follow[]  @relation("Followee")
  Followers Follow[]  @relation("Follower")
  Follow    Follow[]
}

model Post {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [userId], references: [id])
  userId    Int
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  author    User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Follow {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  follower    User     @relation("Follower", fields: [followerId], references: [id])
  followerId  Int
  following   User     @relation("Followee", fields: [followingId], references: [id])
  followingId Int
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}
